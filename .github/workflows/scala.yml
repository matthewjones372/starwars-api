name: Scala CI

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]

permissions:
  contents: read
  packages: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
          restore-keys: |
            ${{ runner.os }}-sbt-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'sbt'

      - name: Check scalafmt
        run: sbt scalafmtCheckAll

      - name: Run test coverage
        run: sbt clean coverage test coverageAggregate

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: target/scala-*/scoverage-report

      - name: Code Coverage Summary
        uses: irongut/CodeCoverageSummary@v1.3.0

      - name: Determine version
        id: determine_version
        run: echo "VERSION=$(sbt dynverCurrentVersion | tail -n 1 | awk '{print $2}')" >> $GITHUB_ENV

      - name: Publish snapshot
        if: github.ref_type == 'branch'
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}
        run: sbt publish

      - name: Publish release
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}
        run: sbt publish